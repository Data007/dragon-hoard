= form_for @customer, url: (@customer.new_record? ? manage_customers_path : manage_customer_path(@customer.id))  do |user_form|
  = error_messages_for @customer
  %fieldset
    %legend User Details
    .input-control.text
      = user_form.hidden_field :role, value: 'customer'
      = user_form.label :first_name, 'First Name'
      = user_form.text_field :first_name
      = user_form.label :last_name, 'Last Name'
      = user_form.text_field :last_name
    
  - unless @customer.new_record?
    = link_to 'Add Address', new_manage_customer_address_path(@customer)
  %fieldset
    %legend Addresses
    = user_form.fields_for :addresses  do |address_form|
      - address = address_form.object
      .address{id: dom_id(address)}
        .input-control.text
          = address_form.text_field :address_1, placeholder: 'Address 1'
          = address_form.text_field :city, placeholder: 'city'
          = address_form.text_field :postal_code, placeholder: 'zip'
        .input-control.select
          = address_form.select :province, Shipper::STATES
        = link_to 'Delete', manage_customer_address_path(customer_id: @customer.id, id: address.id), method: :delete, confirm: "Remove #{address.to_single_line} from #{@customer.full_name}?"

  - unless @customer.new_record?
    = link_to 'Add Phone Number', new_manage_customer_phone_path(@customer)
  %fieldset
    %legend Phone
    = user_form.fields_for :phones do |phone_form|
      - phone = phone_form.object
      .phone{id: dom_id(phone)}
        .input-control.text
          = phone_form.label :number
          = phone_form.text_field :number
        = link_to 'Delete', manage_customer_phone_path(customer_id: @customer.id, id: phone.id), method: :delete, confirm: "Remove #{phone.number} from #{@customer.full_name}?"
  
  .input-control.text
    = user_form.label :email, 'Email'
    = user_form.email_field :email

    = user_form.label :email_confirmation, 'Email Confirmation'
    = user_form.email_field :email_confirmation

  .input-control.password
    = user_form.label :password, 'Password'
    = user_form.password_field :password

    = user_form.label :password_confirmation, 'Password Confirmation'
    = user_form.password_field :password_confirmation

  .input-control.text
    = user_form.label :anniversary
    = user_form.text_field :anniversary

  - unless @customer.new_record?
    = link_to 'Add Ring Size', new_manage_customer_finger_path(@customer)
    = user_form.fields_for :fingers do |finger_form|
      - finger = finger_form.object
      .finger{id: dom_id(finger)}
        .input-control.text
          = finger_form.label :name
          = finger_form.text_field :name
        .input-control.text
          = finger_form.label :size
          = finger_form.text_field :size

  - unless @customer.new_record?
    %fieldset
      %legend Friends and Family
      = link_to 'Add a Relationship', find_manage_customer_alliances_path(@customer)

    = user_form.fields_for :alliances do |alliance_form|
      - alliance = alliance_form.object
      .alliance{id: dom_id(alliance)}
        .input-control.text
          = alliance_form.label :first_name
          = alliance_form.text_field :first_name
        .input-control.text
          = alliance_form.label :last_name
          = alliance_form.text_field :last_name
        .input-control.select
          = alliance_form.select :relationship, options_for_select(Alliance::ALLIANCES)
      %table.alliances
        %thead
          %th Name
          %th Relationship
          %th &nbsp;
        %tbody
          - @customer.alliances.each do |alliance|
            %tr.alliance{id: dom_id(alliance)}
              %td= alliance.ally.full_name
              %td= alliance.relationship
              %td= cart_form.select :shipping_type, options_for_select(shipping_options_for_select(@cart.shipping_options))
              %td= link_to 'Delete', manage_customer_alliance_path(customer_id: @customer.id, id: alliance.id), method: :delete, confirm: "Remove #{alliance.ally.full_name} from the Friends and Family for #{@customer.full_name}?"

  .actions
    = user_form.submit 'Save' 
