- content_for :page_title do
  %h1 Viewing #{@user.name}
  
- content_for :page_actions do
  .button= link_to "edit", edit_admin_user_path(@user.pretty_id)
  
- content_for :page_content do
  .2-column.container{style: 'height: 375px'}
    %h2 Contact Information
    
    = render partial: 'admin/users/addresses'
    = render partial: 'admin/users/phones'
    = render partial: 'admin/users/emails'
        
  .2-column.container{style: 'height: 375px'}
    %h2 Balances
    
    %table
      %tbody
        %tr
          %td Total Spent
          %th= number_to_currency(@user.total_spent)
        %tr
          %td In-Store Credit
          %th= number_to_currency(@user.total_credits)
        %tr
          %td Balance Owing
          %th= number_to_currency(@user.total_balance)
  
  %hr

  %h2 New Orders

  .quick_links
    = link_to "In Store Purchase", new_admin_user_order_path(@user.pretty_id), class: "button"
    = link_to "In Store Repair", new_admin_user_order_path(@user.pretty_id, staging_type: "repair"), class: "button"
    = link_to "In Store Custom", new_admin_user_order_path(@user.pretty_id, staging_type: "custom"), class: "button"
    = link_to "Website, Etsy, or Phone Purchase", new_admin_user_order_path(@user.pretty_id, location: "website", staging_type: "purchase"), class: "button"
    = link_to "Website, Etsy, or Phone Custom", new_admin_user_order_path(@user.pretty_id, location: "website", staging_type: "custom"), class: "button"
  
  %hr
  
  %h2 Customer History
  
  %p
    %strong Orders
    %table.index.stylized
      %thead
        %tr
          %th Order
          %th Item(s)
          %th Total
          %th Paid
          %th Balance
          %th Location
          %th Kind
          %th Status
      %tbody
        - @user.orders.order_by([:pretty_id, :asc]).each do |order|
          %tr{:class => cycle("normal", "alternate")}
            %td= link_to order.pretty_id, admin_user_order_path(@user.pretty_id, order.pretty_id)
            %td
              - order.line_items.each do |line_item|
                - if line_item.variation
                  = link_to "ID#{line_item.variation.parent_item.pretty_id}-#{line_item.variation.pretty_id}", admin_item_path(line_item.variation.parent_item.pretty_id}, variation_id: line_item.variation.pretty_id)
                - else
                  QID#{line_item.quick_id}
                %br
            %td= number_to_currency(order.total)
            %td= number_to_currency(order.paid)
            %td= number_to_currency(order.balance)
            %td{:class => order.location == "website" ? "website" : "instore"}= order.location.capitalize
            %td= order.staging_type
            %td
              = order.ticket.current_stage
  %p
    %strong Payments
    %table.index.stylized
      %thead
        %tr
          %th Order
          %th Paid On
          %th Payment Type
          %th Check #
          %th Payment Amount
      %tbody
        - @user.orders.map(&:payments).flatten.sort {|pay_1, pay_2| pay_1.created_at <=> pay_2.created_at}.reverse.each do |payment|
          %tr
            %td= link_to(payment.order.pretty_id, admin_order_path(payment.order.pretty_id))
            %td #{time_ago_in_words(payment.created_at)} ago (#{payment.created_at.strftime("%b %d, %Y")})
            %td= payment.payment_type.capitalize
            %td= payment.check_number
            %td= number_to_currency(payment.amount)

